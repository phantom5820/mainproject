<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="db.sqlmapper">
 	<select id="selectAllCountEmployee" resultType="int"><!-- int형으로 result값을 돌려주겠다라는 뜻 -->
 		select count(*) from employee <!-- ; 세미콜론은 생략한다!! -->
 	</select>
 	<select id="selectAllEmployee" resultType="dto.EmployeeDTO">
		select * from employee 	<!-- ; 세미콜론은 생략한다!! -->
 	</select>
 	<select id="selectPositionEmployee" resultType="dto.EmployeeDTO" parameterType="int"> <!-- parameterType="int"이렇게 하면 #{no}에 정수값 하나를 받아오겠다라는뜻이다 -->
		
		<!-- 꺽쇠는 태그로 인식하기때문에 마이바티스에서 꺽쇠를 쓰려면 xml에선 <![CDATA[ sql문 ]]> 이렇게 써주어야한다!!!-->
		<![CDATA[select * from employee where position < #{no}]]> <!-- ; 세미콜론은 생략한다!! -->
 	</select>
 	<select id="selectPositionAreaEmployee" resultType="dto.EmployeeDTO" parameterType="map">
 		<![CDATA[select * from employee where position between #{n1} and #{n2}]]> <!-- ; 세미콜론은 생략한다!! -->
 	</select>

 	<insert id="insertEmployee" parameterType="dto.EmployeeDTO">
 		insert into employee(eno, name, department, position) values(#{eno},#{name},#{department},#{position}) <!-- ; 세미콜론은 생략한다!! -->
 	</insert>
 	
 	<update id="updateEmployee" parameterType="dto.EmployeeDTO">
 		update employee set name = #{name}, department=#{department}, position = #{position} where eno = #{eno}
 	</update>
 	
 	<select id="selectNameEmployee" resultType="dto.EmployeeDTO" parameterType="string">
 		select * from employee where name like '%' ||#{name}|| '%'
 	</select>
 	
 	<delete id="deleteEmployee" parameterType="int">
 		delete from employee where position = #{position}
 	</delete>
 	
 	<select id="selectSearchEmployee" parameterType="map" resultType="dto.EmployeeDTO">
 		<!-- 
 		<if test="kind.equals('name')">
	 		select * from (select e.eno, e.name, e.department, e.position, es.salary
	 		 from employee e , employee_salary es where e.eno = es.eno(+))
	 		 where name like '%'||#{search}||'%' 
 		</if>
 		<if test="kind.equals('eno')">
	 		select * from (select e.eno, e.name, e.department, e.position, es.salary
	 		 from employee e , employee_salary es where e.eno = es.eno(+))
	 		 where eno like '%'||#{search}||'%' 
 		</if>
 		<if test="kind.equals('department')">
	 		select * from (select e.eno, e.name, e.department, e.position, es.salary
	 		 from employee e , employee_salary es where e.eno = es.eno(+))
	 		 where department like '%'||#{search}||'%'
 		</if>
 		 -->
 		<choose>
 			<when test="kind.equals('name')">
 				select * from (select e.eno, e.name, e.department, e.position, es.salary
	 		 from employee e , employee_salary es where e.eno = es.eno(+))
	 		 where name like '%'||#{search}||'%'
 			</when>
 			<when test="kind.equals('eno')">
	 		select * from (select e.eno, e.name, e.department, e.position, es.salary
	 		 from employee e , employee_salary es where e.eno = es.eno(+))
	 		 where eno like '%'||#{search}||'%' 
	 		</when>
	 		<otherwise>
		 		select * from (select e.eno, e.name, e.department, e.position, es.salary
		 		 from employee e , employee_salary es where e.eno = es.eno(+))
		 		 where department like '%'||#{search}||'%'
	 		</otherwise>
 		</choose>
 	</select>
</mapper>